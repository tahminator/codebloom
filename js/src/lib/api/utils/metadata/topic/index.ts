import { QuestionTopicDtoTopic } from "@/lib/api/types/autogen/schema";
import { ApiTypeUtils } from "@/lib/api/utils/types";

export const TOPIC_METADATA_LIST: Record<
  QuestionTopicDtoTopic,
  ApiTypeUtils.QuestionTopicTopicMetadata
> = {
  STACK: { name: "Stack" },
  DATA_STREAM: { name: "Data Stream" },
  REJECTION_SAMPLING: { name: "Rejection Sampling" },
  GEOMETRY: { name: "Geometry" },
  COUNTING: { name: "Counting" },
  DESIGN: { name: "Design" },
  PROBABILITY_AND_STATISTICS: { name: "Probability and Statistics" },
  MINIMUM_SPANNING_TREE: {
    name: "Minimum Spanning Tree",
    aliases: ["MST"],
  },
  LINE_SWEEP: { name: "Line Sweep" },
  NUMBER_THEORY: { name: "Number Theory" },
  ROLLING_HASH: { name: "Rolling Hash" },
  SEGMENT_TREE: { name: "Segment Tree" },
  BICONNECTED_COMPONENT: { name: "Biconnected Component" },
  MONOTONIC_STACK: { name: "Monotonic Stack" },
  ITERATOR: { name: "Iterator" },
  QUEUE: { name: "Queue" },
  RADIX_SORT: { name: "Radix Sort" },
  BUCKET_SORT: { name: "Bucket Sort" },
  SHELL: { name: "Shell Sort" },
  MEMOIZATION: { name: "Memoization" },
  STRING: { name: "String" },
  PREFIX_SUM: { name: "Prefix Sum" },
  CONCURRENCY: { name: "Concurrency" },
  DATABASE: { name: "Database", aliases: ["DB"] },
  SHORTEST_PATH: { name: "Shortest Path" },
  SORTING: { name: "Sorting" },
  LINKED_LIST: { name: "Linked List" },
  SLIDING_WINDOW: { name: "Sliding Window" },
  SUFFIX_ARRAY: { name: "Suffix Array" },
  DOUBLY_LINKED_LIST: { name: "Doubly Linked List" },
  SIMULATION: { name: "Simulation" },
  ORDERED_SET: { name: "Ordered Set" },
  GRAPH: { name: "Graph" },
  MATH: { name: "Math" },
  ORDERED_MAP: { name: "Ordered Map" },
  GAME_THEORY: { name: "Game Theory" },
  DYNAMIC_PROGRAMMING: { name: "Dynamic Programming", aliases: ["DP"] },
  RECURSION: { name: "Recursion" },
  MONOTONIC_QUEUE: { name: "Monotonic Queue" },
  MATRIX: { name: "Matrix" },
  RESERVOIR_SAMPLING: { name: "Reservoir Sampling" },
  MERGE_SORT: { name: "Merge Sort" },
  COMBINATORICS: { name: "Combinatorics" },
  INTERACTIVE: { name: "Interactive" },
  BINARY_TREE: { name: "Binary Tree" },
  RANDOMIZED: { name: "Randomized" },
  BITMASK: { name: "Bitmask" },
  BREADTH_FIRST_SEARCH: {
    name: "Breadth-First Search",
    aliases: ["BFS"],
  },
  STRING_MATCHING: { name: "String Matching" },
  GREEDY: { name: "Greedy" },
  BRAINTEASER: { name: "Brainteaser" },
  BACKTRACKING: { name: "Backtracking" },
  BIT_MANIPULATION: { name: "Bit Manipulation" },
  UNION_FIND: { name: "Union-Find" },
  BINARY_SEARCH_TREE: { name: "Binary Search Tree", aliases: ["BST"] },
  TWO_POINTERS: { name: "Two Pointers" },
  ARRAY: { name: "Array" },
  DEPTH_FIRST_SEARCH: { name: "Depth-First Search", aliases: ["DFS"] },
  EULERIAN_CIRCUIT: { name: "Eulerian Circuit" },
  TREE: { name: "Tree" },
  BINARY_SEARCH: { name: "Binary Search", aliases: ["BS"] },
  STRONGLY_CONNECTED_COMPONENT: { name: "Strongly Connected Component" },
  ENUMERATION: { name: "Enumeration" },
  HEAP_PRIORITY_QUEUE: { name: "Heap / Priority Queue" },
  DIVIDE_AND_CONQUER: { name: "Divide and Conquer" },
  HASH_FUNCTION: { name: "Hash Function" },
  HASH_TABLE: { name: "Hash Table" },
  TRIE: { name: "Trie" },
  TOPOLOGICAL_SORT: { name: "Topological Sort" },
  QUICKSELECT: { name: "Quickselect" },
  BINARY_INDEXED_TREE: { name: "Binary Indexed Tree" },
  COUNTING_SORT: { name: "Counting Sort" },
  UNKNOWN: { name: "Unknown" },
};
